---
- name: OpenResty bootstrap
  hosts: proxy
  any_errors_fatal: false
  # gather_facts: no
  # delegate_to: localhost
  vars:
    nginx_version: openresty-1.19.3.2
    nginx_tarball_url: "https://openresty.org/download/{{ nginx_version }}.tar.gz"
    nginx_install_dir: "/tmp/{{ nginx_version }}"
    nginx_modules_dir: "/tmp/openresty_modules"
    # nginx_sbin_path: "/usr/sbin/nginx"
    # nginx_conf_path: "/etc/nginx/nginx.conf"
    nginx_custom_modules: "-j2 --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-ipv6 --with-http_v2_module --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-z,relro -Wl,--as-needed'"

  roles:
# Install OpenResty from repo
    - role: install
      tags: install
# Download source code release
    - role: download
      tags: download
# Configure and install custom module
    - role: configure
      tags: configure

  # tasks:
  # - name: Installing NGINX Dependencies
  #   become: yes
  #   apt:
  #     name: "{{ item }}"
  #     update_cache: yes
  #   with_items:
  #     - libssl-dev
  #     - zlib1g-dev
  #     - libpcre3
  #     - libpcre3-dev
  #     - unzip

  # - name: Downloading NGINX sources
  #   get_url:
  #     url: "{{ nginx_tarball_url }}"
  #     dest: "/tmp/{{ nginx_version }}.tar.gz"
  #   register: nginx_source

  # - name: Unpacking NGINX
  #   unarchive:
  #     copy: no
  #     dest: /tmp/
  #     src: "{{ nginx_source.dest }}"
  #   when: nginx_source.changed
  #   register: nginx_source_unpack

  # - name: Create required Nginx dirs
  #   become: yes
  #   file:
  #     path: /etc/nginx
  #     state: directory
  #     owner: root
  #     mode: 0755



  # - name: Creating NGINX conf file
  #   become: yes
  #   template:
  #     src: nginx.conf
  #     dest: "{{ nginx_conf_path }}"
  #     owner: "{{ ansible_user }}"
  #     group: "{{ ansible_user }}"
  #     mode: 0644

  # - name: Installing NGINX init script (service)
  #   become: yes
  #   template:
  #     src: nginx.init
  #     dest: /etc/init.d/nginx
  #     owner: root
  #     group: root
  #     mode: 0755

  # - name: Starting NGINX
  #   become: yes
  #   service:
  #     name: nginx
  #     state: started