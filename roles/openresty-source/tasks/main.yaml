---
# Install Dependencies
- name: Installing OpenResty Dependencies
  become: yes
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - libssl-dev
    - zlib1g-dev
    - libpcre3
    - libpcre3-dev
    - unzip
    - wget 
    - gnupg 
    - ca-certificates
    - build-essential
    - libxslt-dev
    - libgd-dev
    - libgeoip-dev

# Download OpenResty source code
- name: Downloading OpenResty sources
  get_url:
    url: "{{ nginx_tarball_url }}"
    dest: "/tmp/{{ nginx_version }}.tar.gz"
  register: nginx_source

- name: Unpacking OpenResty
  unarchive:
    copy: no
    dest: /tmp/
    src: "{{ nginx_source.dest }}"
  when: nginx_source.changed
  register: nginx_source_unpack

# Configuring OpenResty source with custom modules
- name: Configuring OpenResty source with custom modules
  become: yes
  shell: "./configure {{ nginx_custom_modules }}"
  args:
    chdir: "{{ nginx_install_dir }}"
    #when: nginx_source_unpack|changed
  register: nginx_configure

- name: Make OpenResty
  become: yes
  shell: make
  args:
    chdir: "{{ nginx_install_dir }}"
    #when: nginx_configure|changed

- name: Make install OpenResty
  become: yes
  shell: make install
  args:
    chdir: "{{ nginx_install_dir }}"
    #when: nginx_configure|changed

- name: Find binary files
  find:
    paths: /usr/local/openresty/bin
    follow: yes
    recurse: no
  register: openresty_bins

- name: Link binary files to Path
  file:
    src: "{{ item.path }}"
    dest: "/usr/bin/{{ item.path | basename}}"
    state: link
    owner: root
    mode: 0755
  with_items: "{{ openresty_bins.files }}"

- name: Link binary files to Path
  file:
    src: "/usr/local/openresty/nginx/sbin/nginx"
    dest: "/usr/bin/openresty"
    state: link
    owner: root
    mode: 0755
  
- name: Systemd service file
  template:
    src: openresty.service.j2
    dest: /lib/systemd/system/openresty.service
    owner: root
    group: root
    mode: 0644

- name: Ensure OpenResty is started and enabled at boot.
  service:
    name: openresty
    state: started
    enabled: true